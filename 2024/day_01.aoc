left = []
right = []

while (true) {
    line = input() 
    if (is_null(line)) {
        break
    }

    [l, r] = split(line, "   ")
    push(left, int(l))
    push(right, int(r))
}

// Simple bubble sort. I don't have the time to implement anything faster,
// and bubble sort is fast enough...
sort = fn(list) {
    sorted = false
    while (!sorted) {
        sorted = true
        for (i = 0; i < len(list) - 1; i = i + 1) {
            if (list[i] <= list[i + 1]) {
                continue
            }

            [list[i], list[i+1]] = [list[i+1], list[i]]
            sorted = false
        }
    }
}

sort(left)
sort(right)

sum = 0
for (i = 0; i < len(left); i = i + 1) {
    l = left[i] - right[i]
    if (l < 0) {
        l = -l
    }

    sum = sum + l
}

print("Part one: " + str(sum))

// -------
// Part two
// -------

score = 0

// O(n^2) solution... Fast enough ¯\_(ツ)_/¯
for (i = 0; i < len(left); i = i + 1) {
    elt = left[i]
    count = 0
    for (j = 0; j < len(right); j = j + 1) {
        if (right[j] == elt) {
            count = count + 1
        }
    }

    score = score + elt * count
}

print("Part two: " + str(score))
